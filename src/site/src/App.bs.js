// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("App");

function name(json) {
  return Json_decode.field("userName", Json_decode.string, json);
}

var Decode = /* module */[/* name */name];

var randomList = /* :: */[
  "This",
  /* :: */[
    "is",
    /* :: */[
      "a",
      /* :: */[
        "list",
        /* [] */0
      ]
    ]
  ]
];

var randomDivs = List.map((function (item) {
        return React.createElement("div", undefined, item);
      }), randomList);

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* UserFetch */0);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("div", undefined, $$Array.of_list(randomDivs));
            }),
          /* initialState */(function (_state) {
              return /* Loading */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action !== 0) {
                  return /* Update */Block.__(0, [/* Error */1]);
                } else {
                  return /* UpdateWithSideEffects */Block.__(2, [
                            /* Loading */0,
                            (function (self) {
                                fetch("/bob").then((function (prim) {
                                            return prim.json();
                                          })).then((function (json) {
                                          var name = Json_decode.field("userName", Json_decode.string, json);
                                          return Promise.resolve(Curry._1(self[/* send */3], /* UserFetched */[name]));
                                        })).catch((function (_err) {
                                        return Promise.resolve(Curry._1(self[/* send */3], /* UserFailedToFetch */1));
                                      }));
                                return /* () */0;
                              })
                          ]);
                }
              } else {
                console.log(action[0]);
                return /* Update */Block.__(0, [/* Success */2]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var loadingMessage = "Currently loading!";

var errorMessage = "An error has occurred!";

var successMessage = "You've successfully made the API call!";

exports.component = component;
exports.loadingMessage = loadingMessage;
exports.errorMessage = errorMessage;
exports.successMessage = successMessage;
exports.Decode = Decode;
exports.randomList = randomList;
exports.randomDivs = randomDivs;
exports.make = make;
/* component Not a pure module */
